<?php99

/**
 * Implements hook_views_api().
 */


function shop_views_api() {
  return array(
    'api' => 3,
    'path' => drupal_get_path('module', 'shop') . '/includes/views',
  );
}
 function shop_menu()
{
 
$items = array();


  $items['myshop/add'] = array(
        'title' => 'Add book',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('shop_form'),
        'access callback' => TRUE,
        'type' => MENU_NORMAL_ITEM,
    );






  $items['myshop/%shop/edit'] = array(
    'title' => 'Edit book',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('shop_form', 1),
         'access callback' => TRUE,
    'type' => MENU_CALLBACK
     
  );

$items['myshop/%shop/delete'] = array(
        'title' => 'Delete album',
        'page callback' => 'shop_delete',
        'page arguments' => array(1),
         'access callback' => TRUE,
        'type' => MENU_CALLBACK,
    );




  return $items;
}

function shop_delete($shop)
{
     

    db_query("DELETE FROM {shop} WHERE id = :id ", array(':id' => $shop->id));
    drupal_set_message('Albom delete');
    drupal_goto('myshop');
}


function shop_load($id)
{
    return  db_query("SELECT * FROM {shop} WHERE id = :id", array(':id' => $id))->fetchObject();


}


 
function shop_form($form,$form_state, $shop = null)
{
    $form['athor'] = array(
        '#title' => 'Athor',
        '#description' => ' Name Athor',
        '#type' => 'textfield',
        '#default_value' => $shop ? $shop->athor : '',
        '#required' => true,
        '#size' => 10,
    );
 
    $form['name_book'] = array(
        '#title' => 'Name Book',
        '#description' => 'Name Book',
        '#type' => 'textfield',
        '#default_value' => $shop ? $shop->name_book : '',
        '#required' => true,
        '#size' => 10,
    );


 
 $form['price'] = array(
        '#title' => 'Price',
        '#description' => 'Price',
        '#type' => 'textfield',
        '#default_value' => $shop ? $shop->price : 0,
        '#required' => true,
        '#size' => 10,
    );

   


 
    $form['submit'] = array(
        '#type' => 'submit',
        '#value' => $shop ? 'Save' : 'Add',
    );
 
    if ($shop)
    {
        $form['id'] = array(
            '#type' => 'value',
            '#value' => $shop->id,
        );
    }
 
    return $form;
}



 function shop_form_validate($form, &$form_state) {

 if (!is_numeric($form_state['values']['price'])) {
    form_set_error('price', t('Value in field "Price" is wrong.'));
  }
 
}
   


function shop_form_submit($form, &$form_state)
{
 
   $shop = array(
       // 'id' => $form_state['values']['id'],
        'athor' => $form_state['values']['athor'],
        'name_book'  => $form_state['values']['name_book'],
        'price' => $form_state['values']['price'],

    );
   

    // сохранение
    if (isset($form_state['values']['id']))
    {
        $shop['id'] = $form_state['values']['id'];
      //  drupal_write_record('shop',$shop, 'id');

    db_query("UPDATE {shop} SET athor = :athor, name_book = :name_book , price = :price WHERE id = :id",
      array(':id' => $shop['id'],':athor' => $shop['athor'], ':name_book' => $shop['name_book'], ':price' => $shop['price'])
    );






        drupal_set_message('Albom saved!');
    }
    // добавление
    else
    {


        db_query("INSERT INTO {shop} (athor , name_book, price,node_id)
                VALUES (:athor, :name_book , :price,1)", 
         array(':athor' => $shop['athor'], ':name_book' => $shop['name_book'], ':price' => $shop['price']));

        drupal_set_message('Albom add');
    }
 

    drupal_goto('myshop');
}

    
